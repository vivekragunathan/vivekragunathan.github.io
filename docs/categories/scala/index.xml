<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on A Developer&#39;s Experience</title>
    <link>/categories/scala/</link>
    <description>Recent content in Scala on A Developer&#39;s Experience</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 19 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software Practices and Tradition</title>
      <link>/posts/software-tradition/</link>
      <pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate>
      <guid>/posts/software-tradition/</guid>
      <description>A note on software tradition - practices, conventions and standards. How it started and how is it going.</description>
    </item>
    <item>
      <title>Restricting sum type instance creation</title>
      <link>/posts/restrict-sum-types-creation/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>/posts/restrict-sum-types-creation/</guid>
      <description>With Scala sum types, you can establish type strictness. But can you restrict creation of instances of sum types? So that you can guarantee that the values they hold pertain to the types defined.</description>
    </item>
    <item>
      <title>Scala on Discord</title>
      <link>/posts/scala-on-discord/</link>
      <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/posts/scala-on-discord/</guid>
      <description>Scala community like others needs a platform for discussions and exchange thoughts and ideas. Above all, a platform where fellow programmers, old or new, can reach out for help and guidance, a platform for education and to breed and spread knowledge. Is Discord the right choice of platform? More importantly, is moving from Gitter to Discord the right choice?</description>
    </item>
    <item>
      <title>Defining sum types across files</title>
      <link>/posts/sum-types-across-files/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      <guid>/posts/sum-types-across-files/</guid>
      <description>While Scala allows creating defining ADTs, unfortunately all the sum types and their associated definitions have to be defined in the same file as the &lt;code&gt;sealed trait&lt;/code&gt; (ADT). This post discusses the situation of defining the sum type (companions) across multiple files.</description>
    </item>
    <item>
      <title>Confluence Alternatives</title>
      <link>/posts/confluence-alternatives/</link>
      <pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate>
      <guid>/posts/confluence-alternatives/</guid>
      <description>Is Confluence your documentation / knowledge-management system? Are you sick of its shortcomings? Poor and non-standard rendering. Lack of markdown support. Weird and inconsistent handling of unicode. Do you still think Confluence is a boon for document writing? Just be aware that there are better alternatives.</description>
    </item>
    <item>
      <title>Anorm Primer</title>
      <link>/posts/anorm-primer/</link>
      <pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/posts/anorm-primer/</guid>
      <description>A primer on Anorm to use the interesting parts - core and combinator functions, as opposed to the mundane way of reading the column from &lt;code&gt;Row&lt;/code&gt;. The post highlights situations when you don&amp;rsquo;t have a predefined type for the parsed row, and you are dealing with discrete columns in the result set based on time and need.</description>
    </item>
    <item>
      <title>scala-cli - A Breeze</title>
      <link>/posts/scala-cli-breeze/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/posts/scala-cli-breeze/</guid>
      <description>New tool on the block is &lt;code&gt;scala-cli&lt;/code&gt; (from virtuslab.org) - a clean simple approachable non-fluff command line first interface to the Scala language.</description>
    </item>
    <item>
      <title>Either Disjoint or Union Types</title>
      <link>/post/2020-12-28-union-types/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-12-28-union-types/</guid>
      <description>Many languages support union types, and it is high time Scala did. Union types are coming in upcoming version of Scala - Dotty. Union types (|) are already being compared with Either and Option (disjoint unions).</description>
    </item>
    <item>
      <title>Know Thy Option</title>
      <link>/2020/04/17/know-thy-option/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/2020/04/17/know-thy-option/</guid>
      <description>&lt;p&gt;Avoid &lt;code&gt;.get&lt;/code&gt; at all costs. Forget there is even a &lt;code&gt;.get&lt;/code&gt; function on &lt;code&gt;Option&lt;/code&gt;. There is always a way out - better one, than using &lt;code&gt;.get&lt;/code&gt;. Same applies to &lt;code&gt;.head&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you are going to have access the value in an &lt;code&gt;Option&lt;/code&gt; in a test class, prefer extending your test class from &lt;code&gt;OptionValues&lt;/code&gt;. Then you can use &lt;code&gt;.value&lt;/code&gt; on an &lt;code&gt;Option&lt;/code&gt;. Doing so establishes the presence of value as verification with meaningful error if value is not defined.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Pattern for Saner Mocking</title>
      <link>/2020/04/02/saner-mocking/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/2020/04/02/saner-mocking/</guid>
      <description>&lt;p&gt;It is common to see mocks being setup this way in unit tests.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scenario&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Test Case 1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;addressResolutionService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;resolve&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;vendorInventoryService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;checkInventory&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;....&lt;/span&gt; another bunch of when and then returns&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;shipmentService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;schedule&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;thisIsTheActualCalltoTest&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;verify&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;vendorInventoryService&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;checkInventory&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt; other such verifications&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scenario&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Test Case 2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;addressResolutionService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;resolve&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;vendorInventoryService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;checkInventory&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;....&lt;/span&gt; another bunch of when and then returns &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;give or take one or more mocks compared to the previous test &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;when&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;shipmentService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;schedule&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)).&lt;/span&gt;thenReturn&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;thisIsTheActualCalltoTest&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;verify&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;vendorInventoryService&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;checkInventory&lt;span style=&#34;color:#ff79c6&#34;&gt;(...)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt; other such verifications&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt; other such test cases&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
